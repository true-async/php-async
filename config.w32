// vim:ft=javascript

ARG_ENABLE('async', 'Enable True Async', 'no');

if (PHP_ASYNC == "yes") {

    EXTENSION("async", "async.c coroutine.c scope.c scheduler.c exceptions.c iterator.c async_API.c zend_common.c context.c libuv_reactor.c");
    ADD_SOURCES("ext/async/internal", "allocator.c circular_buffer.c");

    ADD_FLAG("CFLAGS", "/D PHP_ASYNC");
    ADD_FLAG("CFLAGS", "/D ASYNC_EXPORTS");

    PHP_INSTALL_HEADERS("ext/async", "php_async.h");
    PHP_INSTALL_HEADERS("ext/async", "coroutine.h");
    PHP_INSTALL_HEADERS("ext/async", "scope.h");
    PHP_INSTALL_HEADERS("ext/async", "scheduler.h");
    PHP_INSTALL_HEADERS("ext/async", "exceptions.h");
    PHP_INSTALL_HEADERS("ext/async", "iterator.h");
    PHP_INSTALL_HEADERS("ext/async", "async_API.h");
    PHP_INSTALL_HEADERS("ext/async", "context.h");
    PHP_INSTALL_HEADERS("ext/async", "libuv_reactor.h");

    if (CHECK_HEADER_ADD_INCLUDE("libuv/uv.h", "CFLAGS_UV", PHP_PHP_BUILD + "\\include")
        && CHECK_LIB("libuv.lib", "libuv")) {

        // Note: libuv >= 1.45.0 is required for UV_RUN_ONCE busy loop fix
        // For Windows builds, manually verify libuv version meets requirements

        ADD_FLAG("LIBS", "libuv.lib Dbghelp.lib Userenv.lib");
    } else {
        ERROR("Libuv components are not found. The search was performed in the directory: '" + PHP_PHP_BUILD +
              "'.\nTo compile PHP TRUE ASYNC with LibUV:\n" +
              "1. Copy files from 'libuv\\include' to '" + PHP_PHP_BUILD + "\\include\\libuv\\'\n" +
              "2. Build libuv.lib and copy it to '" + PHP_PHP_BUILD + "\\lib\\'\n" +
              "3. IMPORTANT: Use libuv >= 1.45.0 (fixes UV_RUN_ONCE busy loop issue)");
    }
}
